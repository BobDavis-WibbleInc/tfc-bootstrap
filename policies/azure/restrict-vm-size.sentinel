# Xplor Policy

# Check for Desired VM SKU Size(s)
# Determine if the virtual machine (VM) instances provisioned within your Azure cloud account
# have the desired SKU size(s) established by your organization based on the workload deployed.
# The desired SKU size(s) must be defined in the conformity rule settings,
# on the Trend Micro Cloud Oneâ„¢ Conformity account console



# This policy uses the Sentinel tfplan/v2 import to require that
# all Azure VMs have vm sizes from an allowed list

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan

# Allowed Azure VM Sizes
# Include "null" to allow missing or computed values

# not currently in use "Standard_A1", "Standard_A2", "Standard_D1_v2", "Standard_D2_v2",

allowed_sizes = ["Standard_A1", "Standard_A2", "Standard_B4ms", "Standard_D3_v2"]

# "Standard_D3_v2" = paloalto 
# "Standard_B4ms" = ultron VM's

# Get all Azure VMs using azurerm_virtual_machine
allAzureVMs = plan.find_resources("azurerm_virtual_machine")

# Filter to Azure VMs with violations that use azurerm_virtual_machine
# Warnings will be printed for all violations since the last parameter is true
violatingAzureVMs = plan.filter_attribute_not_in_list(allAzureVMs,
                    "vm_size", allowed_sizes, true)

# Get all Azure VMs using azurerm_windows_virtual_machine
allAzureWindowsVMs = plan.find_resources("azurerm_windows_virtual_machine")

# Filter to Azure VMs with violations that use azurerm_windows_virtual_machine
# Warnings will be printed for all violations since the last parameter is true
violatingAzureWindowsVMs = plan.filter_attribute_not_in_list(allAzureWindowsVMs,
                    "size", allowed_sizes, true)

# Get all Azure VMs using azurerm_linux_virtual_machine
allAzureLinuxVMs = plan.find_resources("azurerm_linux_virtual_machine")

# Filter to Azure VMs with violations that use azurerm_linux_virtual_machine
# Warnings will be printed for all violations since the last parameter is true
violatingAzureLinuxVMs = plan.filter_attribute_not_in_list(allAzureLinuxVMs,
                    "size", allowed_sizes, true)

# Main rule
violations = length(violatingAzureVMs["messages"]) +
             length(violatingAzureWindowsVMs["messages"]) +
             length(violatingAzureLinuxVMs["messages"])

main = rule {
  violations is 0
}
